{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","current","winner","calculateWinner","moves","map","step","move","description","jumpTo","status","handleClick","slice","length","setState","concat","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oPAIMA,EAAS,SAACC,GAAD,OAAY,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SAAoDF,EAAMG,SAE/EC,E,kKAEF,SAAaC,GAAI,IAAD,OACZ,OAAQ,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAAIH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAGpF,WACI,OACI,gCACI,sBAAKJ,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAtBnBC,IAAMC,WA6BpBC,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,QAAS,CAAC,CACNN,QAASO,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,GAPD,E,0CAWnB,WAAU,IAAD,OACCJ,EAAUP,KAAKM,MAAMC,QACrBK,EAAUL,EAAQP,KAAKM,MAAMK,YAC7BE,EAASC,EAAgBF,EAAQX,SAEjCc,EAAQR,EAAQS,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAcD,EAAO,eAAiBA,EAAO,mBACnD,OACI,6BACI,wBAAQtB,QAAS,kBAAM,EAAKwB,OAAOF,IAAnC,SAA2CC,KADtCD,MAMbG,EAAS,iBAAmBrB,KAAKM,MAAMI,QAAU,IAAM,KAI3D,OAHGG,IACCQ,EAAS,WAAaR,GAGtB,sBAAKlB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CAAOG,QAASW,EAAQX,QAASL,QAAS,SAACG,GAAD,OAAO,EAAKuB,YAAYvB,QAEtE,sBAAKJ,UAAU,YAAf,UACI,8BAAM0B,IACN,6BAAKN,Y,yBAMrB,SAAYhB,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQgB,MAAM,EAAGvB,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQiB,OAAS,GACjBvB,QAAQsB,QAC7BT,EAAgBb,IAAYA,EAAQF,KAGvCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKyB,SAAS,CACVlB,QAASA,EAAQmB,OAAO,CAAC,CAACzB,QAASA,KACnCS,SAAUV,KAAKM,MAAMI,QACrBC,WAAYJ,EAAQiB,Y,oBAI5B,SAAOP,GACHjB,KAAKyB,SAAS,CACVd,WAAYM,EACZP,QAAUO,EAAO,IAAO,Q,GA7DjBd,IAAMC,WAyEzB,SAASU,EAAgBb,GAWrB,IAVA,IAAM0B,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMH,OAAQzB,IAAK,CACnC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAG7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACjE,OAAO7B,EAAQ2B,GAGvB,OAAO,KAtBXG,IAASC,OACL,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.d688abe0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Square = (props) => (<button className=\"square\" onClick={props.onClick}>{props.value}</button>);\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return (<Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n    \n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const description = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{description}</button>\n                </li>\n            );\n        });\n\n        let status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        if(winner) {\n            status = 'Winner: ' + winner;\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if(calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({ \n            history: history.concat([{squares: squares}]), \n            xIsNext: !this.state.xIsNext, \n            stepNumber: history.length,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}